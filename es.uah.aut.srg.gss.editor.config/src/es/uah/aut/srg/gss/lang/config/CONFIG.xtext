grammar es.uah.aut.srg.gss.lang.config.CONFIG with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/gss/config" 
import "http://srg.aut.uah.es/gss/common" as common 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

import "http://srg.aut.uah.es/gss/scenario" as scenario
import "http://srg.aut.uah.es/gss/format" as format
import "http://srg.aut.uah.es/gss/export" as export
import "http://srg.aut.uah.es/gss/filter" as filter
import "http://srg.aut.uah.es/gss/import" as import_
import "http://srg.aut.uah.es/gss/charts" as charts
import "http://srg.aut.uah.es/gss/protocol_packets" as protocol_packets
import "http://srg.aut.uah.es/gss/iface" as iface
import "http://srg.aut.uah.es/gss/test_list" as test_list
import "http://srg.aut.uah.es/gss/test_proc" as test_proc

GSSModelFile returns common::GSSModelFile:
	(imports+=GSSModelFileImport)*
	element=GSSConfigGSSConfig
;

GSSModelFileImport returns common::GSSModelFileImport: 
	'import' ':=' importURI=STRING ';'
;

GSSConfigGSSConfig returns GSSConfigGSSConfig:
	'GSSConfigGSSConfig'
	name=ID
	'{'
		('uri' ':=' uri=QualifiedName ';')
		'version' ':=' version=Version ';'
		scenario=GSSScenarioScenario
		Tests=GSSTestListTestList
	'}' ';'
;

GSSScenarioScenario returns scenario::GSSScenarioScenario:
	'GSSScenarioScenario'
	name=STRING
	'{'
		gss_options=GSSScenarioOptions
		Protocols=GSSScenarioProtocols
		Interfaces=GSSScenarioInterfaces
		(SpecialPackets=GSSScenarioSpecialPackets)?
		(PeriodicTCs=GSSScenarioPeriodicTCs)?
		((GlobalVars=GSSScenarioGlobalVars) &
		 (Monitors=GSSScenarioMonitors))?
	'}' ';'
;

GSSScenarioOptions returns scenario::GSSScenarioOptions:
	'GSSScenarioOptions' '{'
		gss_info=GSSScenarioGSSInfo
		gss_info_print=GSSScenarioGSSInfoPrint
		phy_header_print=GSSScenarioPhyHeaderPrint
		discardErrorFlags=GSSScenarioGSSDiscardErrorFlags
	'}' ';'
;

GSSScenarioProtocols returns scenario::GSSScenarioProtocols:
	{scenario::GSSScenarioProtocols}
	'GSSScenarioProtocols' '{'
		(Protocol+=GSSScenarioProtocol)*
	'}' ';'
;

GSSScenarioInterfaces returns scenario::GSSScenarioInterfaces:
	'GSSScenarioInterfaces' '{'
		('ProtocolPacketsFile' ':=' ProtocolPacketsFile=[protocol_packets::GSSProtocolPacketsProtocolPackets|VersionedQualifiedName] ';')?
		MainInterface=GSSScenarioMainInterface
		(Interface+=GSSScenarioInterface)*
	'}' ';'
;

GSSScenarioSpecialPackets returns scenario::GSSScenarioSpecialPackets:
	'GSSScenarioSpecialPackets' '{'
		(SpecialPacket+=GSSScenarioSpecialPacket)+
	'}' ';'
;

GSSScenarioPeriodicTCs returns scenario::GSSScenarioPeriodicTCs:
	{scenario::GSSScenarioPeriodicTCs}
	'GSSScenarioPeriodicTCs' '{'
		(PeriodicTC+=GSSScenarioPeriodicTC)*
	'}' ';'
;

GSSScenarioGlobalVars returns scenario::GSSScenarioGlobalVars:
	'GSSScenarioGlobalVars' '{'
		(GlobalVar+=GSSScenarioGlobalVar)+ 
	'}' ';'
;

GSSScenarioMonitors returns scenario::GSSScenarioMonitors:
	'GSSScenarioMonitors' '{'
		('ChartsFile' ':=' ChartsFile=[charts::GSSChartsCharts|VersionedQualifiedName] ';')?
		(monitor+=GSSScenarioMonitor)+
	'}' ';'
;

GSSScenarioGSSInfo returns scenario::GSSScenarioInfo:
	'GSSScenarioInfo' '{'
		'test_campaign' ':=' test_campaign=STRING ';'
		'version' ':=' version=Version ';'
		'date' ':=' date=DATE ';'
		('version_control_url' ':=' version_control_url=URL ';')?
	'}' ';'
;

GSSScenarioGSSInfoPrint returns scenario::GSSScenarioInfoPrint:
	'GSSScenarioInfoPrint'
	'{'
		'mainLog' ':=' mainLog=GSSScenarioEnableDisable ';'
		'portLogs' ':=' portLogs=GSSScenarioEnableDisable ';'
		'rawLog' ':=' rawLog=GSSScenarioEnableDisable ';'
	'}' ';'
;

GSSScenarioPhyHeaderPrint returns scenario::GSSScenarioPhyHeaderPrint:
	'GSSScenarioPhyHeaderPrint' '{'
		'mainLog' ':=' mainLog=GSSScenarioEnableDisable ';'
		'portLogs' ':=' portLogs=GSSScenarioEnableDisable ';'
		'rawLog' ':=' rawLog=GSSScenarioEnableDisable ';'
		'gssTabs' ':=' gssTabs=GSSScenarioEnableDisable ';'
	'}' ';'
;

GSSScenarioGSSDiscardErrorFlags returns scenario::GSSScenarioDiscardErrorFlags:
	'GSSScenarioDiscardErrorFlags' '{'
		'txErrors' ':=' txErrors=GSSScenarioEnableDisable ';'
		'notExpectedPackets' ':=' notExpectedPackets=GSSScenarioEnableDisable ';'
		'filtersKo' ':=' filtersKo=GSSScenarioEnableDisable ';'
		'validTimesKo' ':=' validTimesKo=GSSScenarioEnableDisable ';'
	'}' ';'
;

enum GSSScenarioEnableDisable returns scenario::GSSScenarioEnableDisable:
	disabled = 'disabled' | enabled = 'enabled'
;

GSSScenarioProtocol returns scenario::GSSScenarioProtocol:
	'GSSScenarioProtocol' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=ID ';'
		'typeLevel' ':=' typeLevel=INTEGER ';'
		type=GSSScenarioProtocolType
		(subtype=GSSScenarioProtocolSubtype)?
	'}' ';'
;

GSSScenarioProtocolType returns scenario::GSSScenarioProtocolType:
	'GSSScenarioProtocolType' '{'
		'name' ':=' name=STRING ';'
		'offset' ':=' offset=INTEGER ';'
	'}' ';'
;

GSSScenarioProtocolSubtype returns scenario::GSSScenarioProtocolType:
	'GSSScenarioProtocolSubtype' '{'
		'name' ':=' name=STRING ';'
		'offset' ':=' offset=INTEGER ';'
	'}' ';'
;

GSSScenarioMainInterface returns scenario::GSSScenarioMainInterface:
	'GSSScenarioMainInterface' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=STRING ';'
		'ifType' ':=' ifType=GSSScenarioInterfaceType ';'
		'ifConfig' ':=' ifConfig=[iface::GSSIfacePortConfig|VersionedQualifiedName] ';' 
		'ioType' ':=' ioType=GSSScenarioInterfaceIOType ';'
		('protocolID' ':=' protocolID=[scenario::GSSScenarioProtocol|VersionedQualifiedReferenceName] ';')?
		(LevelInOut+=GSSScenarioLevelInOut)+ 
	'}' ';'
;

GSSScenarioInterface returns scenario::GSSScenarioInterface:
	'GSSScenarioInterface' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=STRING ';'
		'ifType' ':=' ifType=GSSScenarioInterfaceType ';'
		'ifConfig' ':=' ifConfig=[iface::GSSIfacePortConfig|VersionedQualifiedName] ';'
		'ioType' ':=' ioType=GSSScenarioInterfaceIOType ';'
		('protocolID' ':=' protocolID=[scenario::GSSScenarioProtocol|VersionedQualifiedReferenceName] ';')?
		((LevelInOut+=GSSScenarioLevelInOut) |
		 (LevelIn+=GSSScenarioLevelIn) |
		 (LevelOut+=GSSScenarioLevelOut))+ 
	'}' ';'
;

GSSScenarioLevelInOut returns scenario::GSSScenarioLevelInOut:
	'GSSScenarioLevelInOut' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=STRING ';'
		'TMformat' ':=' TMformat=[format::GSSFormatFormat|VersionedQualifiedName] ';'
		'TCformat' ':=' TCformat=[format::GSSFormatFormat|VersionedQualifiedName] ';'
		'inputFilter' ':=' inputFilter=[filter::GSSFilterFilter|VersionedQualifiedName] ';'
		('export_to_prev_Level' ':=' export_to_prev_Level=[export::GSSExportExport|VersionedQualifiedName] ';')?
		('import_from_prev_Level' ':=' import_from_prev_Level=[import_::GSSImportImport|VersionedQualifiedName] ';')?
	'}' ';'
;

GSSScenarioLevelIn returns scenario::GSSScenarioLevelIn:
	'GSSScenarioLevelIn' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=STRING ';'
		'TCformat' ':=' TCformat=[format::GSSFormatFormat|VersionedQualifiedName] ';'
		('export_to_prev_Level' ':=' export_to_prev_Level=[export::GSSExportExport|VersionedQualifiedName] ';')?
	'}' ';'
;

GSSScenarioLevelOut returns scenario::GSSScenarioLevelOut:
	'GSSScenarioLevelOut' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=STRING ';'
		'TMformat' ':=' TMformat=[format::GSSFormatFormat|VersionedQualifiedName] ';'
		'inputFilter' ':=' inputFilter=[filter::GSSFilterFilter|VersionedQualifiedName] ';'
		('import_from_prev_Level' ':=' import_from_prev_Level=[import_::GSSImportImport|VersionedQualifiedName] ';')?
	'}' ';'
;


enum GSSScenarioInterfaceType returns scenario::GSSScenarioInterfaceType:
	SpW = 'SpW' | SpW_TC = 'SpW_TC' | SpW_Error = 'SpW_Error' |
	uart = 'uart' | dummy = 'dummy'
;

enum GSSScenarioInterfaceIOType returns scenario::GSSScenarioInterfaceIOType:
	in_out = 'in_out' | in = 'in' | out = 'out'
;

GSSScenarioSpecialPacket returns scenario::GSSScenarioSpecialPacket:
	'GSSScenarioSpecialPacket' '{'
		'status' ':=' status=GSSScenarioEnableDisable ';'
		'name' ':=' name=STRING ';'
		'id' ':=' id=INTEGER ';'
		'ifRef' ':=' ifRef=INTEGER ';'
		'levels' ':=' levels=INTEGER ';'
		'levelRef' ':=' levelRef=INTEGER ';'
		'inputFilter' ':=' inputFilter=[filter::GSSFilterFilter|VersionedQualifiedName] ';'
		(UpperLevels+=GSSScenarioUpperLevels)?
		printingData=GSSScenarioPrintingData
		((period=GSSScenarioPeriod) |
		 (intervalRange=GSSScenarioIntervalRange))?
	'}' ';'
;

GSSScenarioUpperLevels returns scenario::GSSScenarioUpperLevels:
	'GSSScenarioUpperLevels' '{'
		(UpperLevel+=GSSScenarioUpperLevel)+
	'}' ';'
;

GSSScenarioPrintingData returns scenario::GSSScenarioPrintingData:
	'GSSScenarioPrintingData' '{'
		'printStatus' ':=' printStatus=GSSScenarioEnableDisable ';'
		(structuredData=GSSScenarioStructuredData)?
	'}' ';'
;

GSSScenarioPeriod returns scenario::GSSScenarioPeriod:
	'GSSScenarioPeriod' '{'
		'min_value' ':=' min_value=INTEGER ';'
		'min_unit' ':=' min_unit=GSSScenarioUnit ';'
		'max_value' ':=' max_value=INTEGER ';'
		'max_unit' ':=' max_unit=GSSScenarioUnit ';'
	'}' ';'
;

GSSScenarioIntervalRange returns scenario::GSSScenarioIntervalRange:
	'GSSScenarioIntervalRange' '{'
		'min' ':=' min=INTEGER ';'
		'max' ':=' max=INTEGER ';'
		'interval_value' ':=' interval_value=INTEGER ';'
		'interval_unit' ':=' interval_unit=GSSScenarioUnit ';'
	'}' ';'
;

GSSScenarioUpperLevel returns scenario::GSSScenarioUpperLevel:
	'GSSScenarioUpperLevel' '{'
		'level' ':=' level=GSSScenarioUpperLevelLevel ';' 
		('TMformat' ':=' TMformat=[format::GSSFormatFormat|VersionedQualifiedName] ';')?
		('inputFilter' ':=' inputFilter=[filter::GSSFilterFilter|VersionedQualifiedName] ';')?
		('import_from_prev_Level' ':=' import_from_prev_Level=[import_::GSSImportImport|VersionedQualifiedName] ';')?
	'}' ';'
;

enum GSSScenarioUpperLevelLevel returns scenario::GSSScenarioUpperLevelLevel:
	_1 = '_1' | _2 = '_2' | _3 = '_3'
;

GSSScenarioStructuredData returns scenario::GSSScenarioStructuredData:
	'GSSScenarioStructuredData' '{'
		'levelRef' ':=' levelRef=INTEGER ';'
		'firstField' ':=' firstField=INTEGER ';'
	'}' ';'
;

enum GSSScenarioUnit returns scenario::GSSScenarioUnit:
	miliseconds = 'miliseconds' | seconds = 'seconds'
;

GSSScenarioPeriodicTC returns scenario::GSSScenarioPeriodicTC:
	GSSScenarioPeriodicTCLevel2 | GSSScenarioPeriodicTCLevel1 | GSSScenarioPeriodicTCLevel0;

GSSScenarioPeriodicTCLevel2 returns scenario::GSSScenarioPeriodicTCLevel2:
	'GSSScenarioPeriodicTCLevel2' '{'
		'name' ':=' name=STRING ';'
		'id' ':=' id=INTEGER ';'
		'ifRef' ':=' ifRef=INTEGER ';'
		'period_value' ':=' period_value=INTEGER ';'
		'period_unit' ':=' period_unit=GSSScenarioUnit ';'
		('level2' ':=' level2=[format::GSSFormatFormat|VersionedQualifiedName] ';')?
		'app_to_level2' ':=' app_to_level2=[export::GSSExportExport|VersionedQualifiedName] ';'
		('level1' ':=' level1=[format::GSSFormatFormat|VersionedQualifiedName] ';')?
		('level2_to_level1' ':=' level2_to_level1=[export::GSSExportExport|VersionedQualifiedName] ';')?
		('level0' ':=' level0=[format::GSSFormatFormat|VersionedQualifiedName] ';')?
		('level1_to_level0' ':=' level1_to_level0=[export::GSSExportExport|VersionedQualifiedName] ';')?
	'}' ';'
;

GSSScenarioPeriodicTCLevel1 returns scenario::GSSScenarioPeriodicTCLevel1:
	'GSSScenarioPeriodicTCLevel1' '{'
		'name' ':=' name=STRING ';'
		'id' ':=' id=INTEGER ';'
		'ifRef' ':=' ifRef=INTEGER ';'
		'period_value' ':=' period_value=INTEGER ';'
		'period_unit' ':=' period_unit=GSSScenarioUnit ';'
		('level1' ':=' level1=[format::GSSFormatFormat|VersionedQualifiedName] ';')?
		'app_to_level1' ':=' app_to_level1=[export::GSSExportExport|VersionedQualifiedName] ';'
		('level0' ':=' level0=[format::GSSFormatFormat|VersionedQualifiedName] ';')?
		('level1_to_level0' ':=' level1_to_level0=[export::GSSExportExport|VersionedQualifiedName] ';')?
	'}' ';'
;

GSSScenarioPeriodicTCLevel0 returns scenario::GSSScenarioPeriodicTCLevel0:
	'GSSScenarioPeriodicTCLevel0' '{'
		'name' ':=' name=STRING ';'
		'id' ':=' id=INTEGER ';'
		'ifRef' ':=' ifRef=INTEGER ';'
		'period_value' ':=' period_value=INTEGER ';'
		'period_unit' ':=' period_unit=GSSScenarioUnit ';'
		('level0' ':=' level0=[format::GSSFormatFormat|VersionedQualifiedName] ';')?
		'app_to_level0' ':=' app_to_level0=[export::GSSExportExport|VersionedQualifiedName] ';'
	'}' ';'
;

GSSScenarioGlobalVar returns scenario::GSSScenarioGlobalVar:
	'GSSScenarioGlobalVar' '{'
		'name' ':=' name=STRING ';'
		'id' ':=' id=INTEGER ';'
		'type' ':=' type=GSSScenarioGlobalVarType ';'
		'initial_value' ':=' initial_value=INTEGER ';'
		 reference=GSSScenarioReference
	'}' ';'
;

GSSScenarioReference returns scenario::GSSScenarioReference:
	GSSScenarioReferenceField | GSSScenarioReferencePeriodicTC |
	GSSScenarioReferenceSpecialPacket;

enum GSSScenarioGlobalVarType returns scenario::GSSScenarioGlobalVarType:
	uint = 'uint' | formula = 'formula'
;

GSSScenarioReferenceField returns scenario::GSSScenarioReferenceField:
	'GSSScenarioReferenceField' '{'
		'type' ':=' type=GSSScenarioReferenceFieldType ';'
		'ifRef' ':=' ifRef=INTEGER ';'
		'level' ':=' level=INTEGER ';'
		'fieldRef' ':=' fieldRef=INTEGER ';'
		'offset' ':=' offset=INTEGER ';'
		'size' ':=' size=INTEGER ';'
	'}' ';'
;

GSSScenarioReferencePeriodicTC returns scenario::GSSScenarioReferencePeriodicTC:
	'GSSScenarioReferencePeriodicTC' '{'
		'idRef' ':=' idRef=[scenario::GSSScenarioPeriodicTC|STRING] ';'
		'level' ':=' level=INTEGER ';'
		'fieldRef' ':=' fieldRef=INTEGER ';'
		'offset' ':=' offset=INTEGER ';'
		'size' ':=' size=INTEGER ';'
	'}' ';'
;

GSSScenarioReferenceSpecialPacket returns scenario::GSSScenarioReferenceSpecialPacket:
	'GSSScenarioReferenceSpecialPacket' '{'
		'idRef' ':=' idRef=[scenario::GSSScenarioSpecialPacket|STRING] ';'
		'level' ':=' level=INTEGER ';'
		'fieldRef' ':=' fieldRef=INTEGER ';'
		'offset' ':=' offset=INTEGER ';'
		'size' ':=' size=INTEGER ';'
	'}' ';'
;

enum GSSScenarioReferenceFieldType returns scenario::GSSScenarioReferenceFieldType:
	tm = 'tm' | tc = 'tc';

GSSScenarioMonitor returns scenario::GSSScenarioMonitor:
	GSSScenarioPlot | GSSScenarioAlarmMsg | GSSScenarioModify | GSSScenarioAlarmVal;

GSSScenarioPlot returns scenario::GSSScenarioPlot:
	'GSSScenarioPlot' '{'
		'name' ':=' name=STRING ';'
		'chartRef' ':=' chartRef=[charts::GSSChartsChart|VersionedQualifiedReferenceName] ';'
		GVRef=GSSScenarioGVRef
	'}' ';'
;

GSSScenarioAlarmMsg returns scenario::GSSScenarioAlarmMsg:
	'GSSScenarioAlarmMsg' '{'
		'name' ':=' name=STRING ';'
		'type' ':=' type=GSSScenarioAlarmMsgType ';'
		'text' ':=' text=STRING ';'
		GVRef=GSSScenarioGVRef
	'}' ';'
;

GSSScenarioModify returns scenario::GSSScenarioModify:
	'GSSScenarioModify' '{'
		'name' ':=' name=STRING ';'
		'type' ':=' type=GSSScenarioModifyType ';'
		'value' ':=' value=INTEGER ';'
		GVRef=GSSScenarioGVRef
	'}' ';'
;

GSSScenarioAlarmVal returns scenario::GSSScenarioAlarmVal:
	'GSSScenarioAlarmVal' '{'
		'name' ':=' name=STRING ';'
		'type' ':=' type=GSSScenarioAlarmValType ';'
		GVRef=GSSScenarioGVRef
	'}' ';'
;

GSSScenarioGVRef returns scenario::GSSScenarioGVRef:
	GSSScenarioGVFiltered | GSSScenarioGVPeriodic;

GSSScenarioGVFiltered returns scenario::GSSScenarioGVFiltered:
	'GSSScenarioGVFiltered' '{'
		'GlobalVarRef' ':=' GlobalVarRef=[scenario::GSSScenarioGlobalVar|STRING] ';'
		('filter' ':=' filter=[filter::GSSFilterFilter|VersionedQualifiedName] ';')?
	'}' ';'
;

GSSScenarioGVPeriodic returns scenario::GSSScenarioGVPeriodic:
	'GSSScenarioGVPeriodic' '{'
		'GlobalVarRef' ':=' GlobalVarRef=[scenario::GSSScenarioGlobalVar|STRING] ';'
		'period_value' ':=' period_value=INTEGER ';'
		'period_unit' ':=' period_unit=GSSScenarioUnit ';'
	'}' ';'
;

enum GSSScenarioAlarmMsgType returns scenario::GSSScenarioAlarmMsgType:
	alarm1 = 'alarm1' | alarm2 = 'alarm2' | alarm3 = 'alarm3'
;

enum GSSScenarioModifyType returns scenario::GSSScenarioModifyType:
	increment = 'increment' | increment1wrap = 'increment1wrap'
;

enum GSSScenarioAlarmValType returns scenario::GSSScenarioAlarmValType:
	alarm1 = 'alarm1'
;
		
GSSTestListTestList returns test_list::GSSTestListTestList:
	'GSSTestListTestList' '{'
		(TestCase+=GSSTestListTestCase)+ 
	'}' ';'
;

GSSTestListTestCase returns test_list::GSSTestListTestCase:
	'GSSTestListTestCase' '{'
		'name' ':=' name=STRING ';'
		'procedure' ':=' procedure=[test_proc::GSSTestProcTestProc|VersionedQualifiedName] ';'
		('prevMsg' prevMsg=ID)?
		('prevAction' prevAction=GSSTestListPrevAction
			('prevActionParam' prevActionParam=STRING)?
		)?
	'}' ';'
;

enum GSSTestListPrevAction returns test_list::GSSTestListPrevAction:
	reset = '1';

QualifiedName returns ecore::EString:
	ID ('.' ID)*;

Version returns ecore::EString:
	(INT | ((INT)? ID)) ('.' (INT | ((INT)? ID)))*
	;

VersionedQualifiedName returns ecore::EString:
	QualifiedName '(' Version ')'
	;

VersionedQualifiedReferenceName returns ecore::EString:
	(VersionedQualifiedName '::')? ID ('::' ID)*;

terminal HEXADECIMAL returns ecore::EString:
	('0x' (('0'..'9') | ('a'..'f') | ('A'..'F'))+);

INTEGER returns ecore::EString:
	('-'? INT | HEXADECIMAL);

EBoolean returns ecore::EBoolean:
	'true' | 'false'; 
	
REAL returns ecore::EString:
	'-'? (INT '.' ':=' INT) ('e' ('-')? INT)?;

DATE returns ecore::EString:
	INT ('/') INT ('/') INT;

URL returns ecore::EString:
	ID ('+' ID)? '://' (ID ('.')?)+ ('/' ID)* ('/')?;