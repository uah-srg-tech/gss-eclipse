// automatically generated by Xtext
grammar es.uah.aut.srg.gss.lang.charts.CHARTS with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/gss/charts" 
import "http://srg.aut.uah.es/gss/common" as common 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

GSSModelFile returns common::GSSModelFile:
	(imports+=GSSModelFileImport)*
	element=GSSChartsCharts
;

GSSModelFileImport returns common::GSSModelFileImport: 
	'import' ':=' importURI=ID ';'
;

GSSChartsCharts returns GSSChartsCharts:
	'GSSChartsCharts'
	name=EString
	'{'
		(('uri' ':=' uri=QualifiedName ';')
		& ('version' ':=' version=Version ';'))
		(Chart+=GSSChartsChart)+
	'}' ';'
;

GSSChartsChart returns GSSChartsChart:
	'GSSChartsChart' '{'
		'id' ':='  id=INTEGER ';'
		'name' ':=' name=ID ';'
		'y_units' ':=' y_units=GSSChartsYUnits ';'
		'y_max' ':=' y_max=INTEGER ';'
	'}' ';'
;

enum GSSChartsYUnits returns GSSChartsYUnits:
	volts = 'volts' | amps = 'amps';

EString returns ecore::EString:
	STRING | ID;

QualifiedName returns ecore::EString:
	ID ('.' ID)*;

Version returns ecore::EString:
	(INT | ((INT)? ID)) ('.' (INT | ((INT)? ID)))*
	;

VersionedQualifiedName returns ecore::EString:
	QualifiedName '(' Version ')'
	;

VersionedQualifiedReferenceName returns ecore::EString:
	(VersionedQualifiedName '::')? ID ('::' ID)*;

terminal HEXADECIMAL returns ecore::EString:
	('0x' (('0'..'9') | ('a'..'f') | ('A'..'F'))+);

INTEGER returns ecore::EString:
	('-'? INT | HEXADECIMAL);

EBoolean returns ecore::EBoolean:
	'true' | 'false';
	
REAL returns ecore::EString:
	'-'? (INT '.' ':=' INT) ('e' ('-')? INT)?;
