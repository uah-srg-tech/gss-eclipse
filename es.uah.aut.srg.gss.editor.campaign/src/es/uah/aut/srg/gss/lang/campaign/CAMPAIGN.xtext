grammar es.uah.aut.srg.gss.lang.campaign.CAMPAIGN with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/gss/campaign" 
import "http://srg.aut.uah.es/gss/common" as common 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

import "http://srg.aut.uah.es/gss/scenario" as scenario
import "http://srg.aut.uah.es/gss/environment" as environment
import "http://srg.aut.uah.es/gss/test_list" as test_list
import "http://srg.aut.uah.es/gss/test_proc" as test_proc

GSSModelFile returns common::GSSModelFile:
	(imports+=GSSModelFileImport)*
	element=GSSCampaignCampaign
;

GSSModelFileImport returns common::GSSModelFileImport: 
	'import' ':=' importURI=STRING ';'
;

GSSCampaignCampaign returns GSSCampaignCampaign:
	'GSSCampaignCampaign'
	name=ID
	'{'
		('uri' ':=' uri=QualifiedName ';')
		'version' ':=' version=Version ';'
		Scenario=GSSCampaignScenario
		Tests=GSSTestListTestList
	'}' ';'
;
		
GSSCampaignScenario returns GSSCampaignScenario:
	'GSSCampaignScenario' '{'
		'environment' ':=' environment=[environment::GSSEnvironmentEnvironment|VersionedQualifiedName] ';'
		'scenarioRef' ':=' scenarioRef=[scenario::GSSScenarioScenario|STRING] ';'
	'}' ';'
;
		
GSSTestListTestList returns test_list::GSSTestListTestList:
	'GSSTestListTestList' '{'
		(TestCase+=GSSTestListTestCase)+ 
	'}' ';'
;

GSSTestListTestCase returns test_list::GSSTestListTestCase:
	'GSSTestListTestCase' '{'
		'name' ':=' name=STRING ';'
		'procedure' ':=' procedure=[test_proc::GSSTestProcTestProc|VersionedQualifiedName] ';'
		('prevMsg' prevMsg=ID)?
		('prevAction' prevAction=GSSTestListPrevAction
			('prevActionParam' prevActionParam=STRING)?
		)?
	'}' ';'
;

enum GSSTestListPrevAction returns test_list::GSSTestListPrevAction:
	reset = '1';

QualifiedName returns ecore::EString:
	ID ('.' ID)*;

Version returns ecore::EString:
	(INT | ((INT)? ID)) ('.' (INT | ((INT)? ID)))*
	;

VersionedQualifiedName returns ecore::EString:
	QualifiedName '(' Version ')'
	;